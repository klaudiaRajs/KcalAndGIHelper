@model RecipeViewModel

@{
    string? url = Model.Recipe.Id == 0 ? Url.Action("Create", "Recipe") : Url.Action("Edit", "Recipe");
    url = Model.IsIngredientBeingSwitched && Model.Recipe.Id != 0 ? Url.Action("ChangeIngredients", "Recipe") : url;
}

<div class="container">
    <form method="post" action="@url">
        <div class="mb-3 row">
            <label asp-for="@Model.Recipe.TotalKcal"></label>
            <input id="totalRecipe" asp-for="@Model.Recipe.TotalKcal" class="form-control" readonly/>
            <label asp-for="@Model.Recipe.TotalGL"></label>
            <input id="totalRecipeGL" asp-for="@Model.Recipe.TotalGL" class="form-control" readonly/>
        </div>
        <div class="mb-3 row">
            <input hidden asp-for="@Model.Recipe.Id"/>
            <input hidden asp-for="@Model.Recipe.MealId"/>
            <input hidden asp-for="@Model.Recipe.RecipeDayId"/>
            <label asp-for="@Model.Recipe.Name"></label>
            <input asp-for="@Model.Recipe.Name" class="form-control"/>
            <span asp-validation-for="@Model.Recipe.Name" class="text-danger"> </span>
        </div>
        @*<div class="mb-3 row vh-25">
            <label asp-for="@Model.SelectedMeals" />
            //TODO - this does not work 
            <select class="form-control vh-25" multiple="multiple" asp-for="@Model.SelectedMeals" asp-items="@Model.Meals"></select>
        </div>*@

        @foreach (Category category in Model.Categories)
        {
            Model.CurrentCategory = category;
            Model.CurrentlySelectedCheckboxes = Model.SelectedCheckboxes.Where(a => a.CategoryId == category.Id).ToList();
            <div class="m-2">
                <h3>@category.Name</h3></div>
            <div class="row">

                <text>
                    <div class="mb-3">
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal"
                                data-bs-target="#productGroupModal-@category.Id">
                            Otwórz grupę produktów - @category.Name
                        </button>
                    </div>
                    <!-- Modal -->
                    <div class="modal fade" id="productGroupModal-@category.Id" tabindex="-1"
                         aria-labelledby="productGroupModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="productGroupModalLabel">Grupa Produktów</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                            aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @Html.Partial("_productGroup", Model)
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </text>
            </div>
            <div id="summary-@category.Id">
                @{
                    List<SelectedCheckboxViewModel> selectedProducts = Model.CurrentlySelectedCheckboxes.Where(a => a.Grams != 0).ToList();
                    foreach (SelectedCheckboxViewModel product in selectedProducts)
                    {
                        int totalKcal = product.Grams * (@product.Product.KcalPer100g / 100);
                        <p>@product.Name : @product.Grams ( @totalKcal ) </p>
                    }
                }
            </div>
        }
        <button type="submit" class="btn btn-primary mt-5">Save</button>
    </form>
</div>
<script>
    function updateTotal(element, kcalElement, glElement, kcalPer100g, productGI, carbsPer100g, categoryId, productName) {
        let amount = element.value;
        let kcals = getKcalsForAmount(amount,  kcalPer100g);
        kcalElement.innerHTML = kcals;
        glElement.innerHTML = getGlycemicIndexForAmount(amount,  productGI, carbsPer100g);
        countTotal();
        countTotalGL();
        setIndividualGlBackgrounds();
        setTotalGlBackground();
        addItemToSummaryBelowGroup(categoryId, productName, kcals, amount);
    }

    function addItemToSummaryBelowGroup(categoryId, productName, kcal, amount) {
        let summary = document.getElementById("summary-" + categoryId);        
        summary.innerHTML = summary.innerHTML + "<p>" + productName + ": " + amount + "gr (" + kcal + "kcal) </p>";
    }

    function countTotal() {
        var items = $(".total-kcal:visible");
        var total = 0;
        for (var i = 0; i < items.length; i++) {
            var kcals = parseInt(items[i].value);
            if (kcals != 0) {
                total += kcals;
            }
        }
        ($("#totalRecipe")[0]).value = total;
    }

    function countTotalGL() {
        var items = $(".total-gl:visible");
        var total = 0;
        for (var i = 0; i < items.length; i++) {
            var gl = parseInt(items[i].value);

            if (gl != 0) {
                total += gl;
            }
        }
        ($("#totalRecipeGL")[0]).value = total;
    }

    function toggleAmount(element) {
        if (element.style.display === "none") {
            element.style.display = "block";
        } else {
            element.style.display = "none";
        }
    }

    $(function () {
        setIndividualGlBackgrounds();
        setTotalGlBackground();
    });

    function setTotalGlBackground() {
        var totalRecipeGL = $("#totalRecipeGL")[0];
        if (totalRecipeGL.value <= 79) {
            $("#totalRecipeGL")[0].style.backgroundColor = "green";
        } else if (totalRecipeGL.value <= 119) {
            $("#totalRecipeGL")[0].style.backgroundColor = "orange";
        } else {
            $("#totalRecipeGL")[0].style.backgroundColor = "red";
        }
    }

    function setIndividualGlBackgrounds() {
        var items = $(".total-gl:visible");
        for (var i = 0; i < items.length; i++) {
            var item = parseFloat(items[i].value);
            if (item <= 10) {
                items[i].style.backgroundColor = "green";
            } else if (item <= 39) {
                items[i].style.backgroundColor = "orange";
            } else {
                items[i].style.backgroundColor = "red";
            }
        }
    }
</script>
