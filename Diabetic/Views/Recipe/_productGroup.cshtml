@model RecipeViewModel

<p> @Model.CurrentCategory.Name </p>
@{
    foreach (SelectedCheckboxViewModel item in Model.CurrentlySelectedCheckboxes)
    {
        string boxId = "amountBox" + item.Id;
        string totalKcalBox = "totalBox" + item.Id + "Kcal";
        string totalGlBox = "totalBox" + item.Id + "Gl";
        string isDisplayed = item.IsChecked ? "block" : "none";
        <text>
            <div class="col-auto">
                <div>
                    <input class="form-number-input" asp-for="@item.IsChecked" type="checkbox"
                           onclick="toggleAmount(@boxId)">
                    <input hidden asp-for="@item.Id"/>
                    <label class="form-check-label"
                           asp-for="@item.IsChecked">@item.Name</label>
                </div>
                <div id="@boxId" style="display: @isDisplayed">
                    <div>
                        <p >Selected kcals: <span id="@totalKcalBox"> @item.TotalKcal </span> Selected GL: <span id="@totalGlBox"> @item.GL </span></p>
                        <label class="form-check-label" asp-for="@item.Grams">Amount: </label>
                        <input class="form-control-sm " asp-for="@item.Grams"
                               onfocusout="updateTotal(this, @totalKcalBox, @totalGlBox, @item.Product.KcalPer100g, @item.Product.Gi, @item.Product.CarbsPer100g, @Model.CurrentCategory.Id, '@item.Product.Name')"/>
                    </div>
                </div>
            </div>
        </text>
    }
}


