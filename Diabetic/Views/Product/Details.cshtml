@model ProductViewModel

<div class="mt-5">
    <table class="table">
        <thead class="thead-light">
            <tr>
                <th scope="col">#</th>
                <th scope="col">@nameof(Model.Product.Name)</th>
                <th scope="col" class="text-center">@nameof(Model.Product.KcalPer100g)</th>
                <th scope="col" class="text-center">@nameof(Model.Product.GI)</th>
                <th scope="col">@nameof(Model.Product.GramsPerPortion)</th>
                <th scope="col" class="text-center">ŁG</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (IngredientDTO ingredient in Model.Products)
            {
                <tr>
                    <th scope="row">
                        @ingredient.Product.Id
                    </th>
                    <td>
                        @(char.ToUpper(ingredient.Product.Name[0]) + ingredient.Product.Name.Substring(1))
                    </td>
                    <td class="text-center">
                        @ingredient.Product.KcalPer100g
                    </td>
                    @if (Model.IsGreenGI(ingredient.Product.GI))
                    {
                        <text>
                        <td class="table-success text-center"> @ingredient.Product.GI </td>
                        </text>
                    }
                    @if (Model.IsOrangeGI(ingredient.Product.GI))
                    {
                        <text>
                        <td class="table-warning text-center"> @ingredient.Product.GI </td>
                        </text>
                    }
                    @if (Model.IsRedGI(ingredient.Product.GI))
                    {
                        <text>
                        <td class="table-danger text-center"> @ingredient.Product.GI </td>
                        </text>
                    }
                    <td class="col col-lg-1 text-center">@ingredient.Product.GramsPerPortion</td>
                    @if (Model.IsGreenLG((ingredient.Product.GI * ingredient.Product.CarbsPer100g) / 100))
                    {
                        <text>
                        <td class="table-success text-center"> @(Math.Round(((ingredient.Product.GI * ingredient.Product.CarbsPer100g) / 100), 1)) </td>
                        </text>
                    }
                    @if (Model.IsOrangeLG((ingredient.Product.GI * ingredient.Product.CarbsPer100g) / 100))
                    {
                        <text>
                        <td class="table-warning text-center"> @(Math.Floor((ingredient.Product.GI * ingredient.Product.CarbsPer100g) / 100)) </td>
                        </text>
                    }
                    @if (Model.IsRedLG((ingredient.Product.GI * ingredient.Product.CarbsPer100g) / 100))
                    {
                        <text>
                        <td class="table-danger text-center"> @(Math.Floor((ingredient.Product.GI * ingredient.Product.CarbsPer100g) / 100)) </td>
                        </text>
                    }
                    <td class="col col-lg-3">
                        <a asp-controller="ingredient.Product" asp-action="Details" asp-route-id="@ingredient.Product.Id" class="btn btn-warning">Details</a>
                        <a asp-controller="ingredient.Product" asp-action="Edit" asp-route-id="@ingredient.Product.Id" class="btn btn-warning">Edit</a>
                        <a asp-controller="ingredient.Product" asp-action="Remove" asp-route-id="@ingredient.Product.Id" class="btn btn-warning">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>